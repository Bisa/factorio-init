#!/bin/bash

# Enable debugging, useful when you want to figure out why
# this script is not behaving the way you expect it to do
DEBUG=0

# Enable alternative glibc directory for systems using older glibc versions ( ie RHEL CentOS and others )
ALT_GLIBC=0
# Put the Absolute path to the side by side glibc root here
ALT_GLIBC_DIR="/opt/glibc-2.18"
#Version of alt glibc goes here (i.e 2.18)
ALT_GLIBC_VER="2.18"

# What do you want to call this service?
SERVICE_NAME="Factorio"

# Which user/group is running factorio?
# Running any public service as "root" is generally not recommended
USERNAME=factorio
USERGROUP=factorio

# The absolute path to the factorio directory
FACTORIO_PATH=/opt/factorio
# Server settings file, see data/server-settings.example.json
SERVER_SETTINGS=${FACTORIO_PATH}/data/server-settings.json

# Server admin settings
# Server admin list file, must be in the following format:
# [
#    admin1,
#    admin2,
#    adminX
# ]
# If the file does not exist in ${FACTORIO_PATH}/data, a blank copy will be created.
ADMINLIST=${FACTORIO_PATH}/data/server-adminlist.json

# The whitelist file is in the same format as the admin list file.
# If the file does not exist in ${FACTORIO_PATH}/data, it will not be used.
WHITELIST=${FACTORIO_PATH}/data/server-whitelist.json

# Port on which you want to run the server
PORT=34197

# Save the command/chat/log on server start? Default location /opt/factorio/server.out 
# Setting this to 0 will cause the script to erase the log file on each start
# If you set this to 1 you might want to apply logrotate on the log or it will eventually fill your disk
SAVELOG=0

# Delay starting the game server until the we confirm the pingpong servers are reachable.
# This makes sure that game server detects the correct external IP in a NAT setup.
# Useful for Cloud providers where VMs may start faster than their Internet connectivity is plumbed.
WAIT_PINGPONG=0

# Factorio comes packaged in a tarball containing the directory named "factorio"
# when using this scripts update/install command we expect to see this very
# directory. If you want to supply your own update/install tar other than what you can download
# from factorio.com/download-headless you can use this option to tell the script this is ok.
#
# If you place your factorio install within a directory named "factorio" and you update/install
# with the official tarball you can safely ignore this option.
PACKAGE_DIR_NAME=factorio

#
# narcotiq made a sweet update script for factorio and by cloning into this
# you can simply run "factorio update" provided you configure the below arguments
# To install the updater:
#
# git clone https://github.com/narc0tiq/factorio-updater
#

# absolute path to the factorio-updater script
UPDATE_SCRIPT=/path/to/update_factorio.py
# Note that if you set HEADLESS=1 the username/token will not be used as the headless
# download is provided free of charge
HEADLESS=1
UPDATE_USERNAME=you
UPDATE_TOKEN=yourtoken
UPDATE_EXPERIMENTAL=0
# set this to a directory where you allow this script to create a 'factorio-update' directory.
UPDATE_TMPDIR=/tmp
# The directory ${UPDATE_TMPDIR}/factorio-update will be used by the updater to store patches for factorio.
#   If you set UPDATE_PERSIST_TMPDIR=1 this script will not try to clean up the directory.
#   This will effectively cache the patch files for later use but be aware that you need to handle eventual clean-up
#   of the ${UPDATE_TMPDIR}/factorio-update directory yourself.
UPDATE_PERSIST_TMPDIR=0
# prevent the script from restarting factorio during updates by setting this to 1
#   (note! This also means that you will be prevented from applying updates with the
#   script if the server is running)
UPDATE_PREVENT_RESTART=0

# Extras
# Additional binary arguments, these will be sent to the binary when issuing the "start" command
EXTRA_BINARGS=""
