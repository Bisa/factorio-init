#!/bin/bash

set -o pipefail
set -u

STASH_SIZE="$(git stash list |wc -l)" # remember how big the stash is before we try to stash
git stash push --keep-index --include-untracked --message "pre-commit-hook-$(date +%s)" || exit 1

# find out where this repo is situated
root_dir="$(git rev-parse --show-toplevel)"

# setup some tags
image_id="finit"
base_tag="latest"
with_resources="${image_id}:${base_tag}-with-resources"
sans_resources="${image_id}:${base_tag}-sans-resources"

# do shellcheck on factorio script
docker run --rm -v "$root_dir:/mnt" koalaman/shellcheck:stable factorio &&
# run local tests
"${root_dir}/extras/test/libs/bats-core/bin/bats" "${root_dir}/extras/test" &&
# build docker images
docker build --tag "$with_resources" - < "${root_dir}"/extras/Dockerfile &&
docker build --target no-test-resources --tag "$sans_resources" - < "${root_dir}"/extras/Dockerfile &&
# run tests on docker
docker run -t --rm -v "$root_dir:/opt/factorio-init" "$sans_resources" --jobs 10 extras/test &&
docker run -t --rm -v "$root_dir:/opt/factorio-init" "$with_resources" --jobs 10 extras/test
test_return=$?

if [ $STASH_SIZE -lt $(git stash list |wc -l) ]; then
    # we added stuff earlier, let us restore it now
    git stash pop || exit 1
fi

exit $test_return
