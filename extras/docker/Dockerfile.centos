ARG centos_version=centos8
ARG factorio_version=1.1.30
ARG factorio_user=factorio

### A base image without test resources:
FROM centos:$centos_version AS sans-test-resources
ARG factorio_user
RUN yum update -y && \
	yum install -y \
      wget && \
	yum clean all && \
    rm -rf /var/cache/yum
RUN useradd $factorio_user
USER $factorio_user
WORKDIR /opt/factorio-init
ENTRYPOINT ["bash", "/opt/factorio-init/extras/test/libs/bats-core/bin/bats"]

### Build onto the base, add test resources:
FROM sans-test-resources AS with-test-resources
ARG factorio_version
ENV FACTORIO_INIT_WITH_TEST_RESOURCES=1
RUN wget -O /tmp/factorio_headless_x64_${factorio_version}.tar.xz \
     https://factorio.com/get-download/${factorio_version}/headless/linux64

### Build onto the with-test-resources for alternate glibc (for centos7 testing)
FROM with-test-resources AS with-glibc-sidebyside
ARG factorio_user
USER root
RUN yum groupinstall -y \
		"Development tools" && \
	yum install -y \
		glibc-devel.i686 \
		glibc.i686 && \
	yum clean all && \
    rm -rf /var/cache/yum
WORKDIR /tmp
RUN wget -q http://ftp.gnu.org/gnu/glibc/glibc-2.18.tar.gz -O - |tar -xvz
WORKDIR /tmp/glibc-2.18/glibc-build
RUN sed "s/3\.\[89\]/3\.\[89\]\* | 4/" -i ../configure
RUN ../configure --prefix='/opt/glibc-2.18' && \
	sed -i -e 's#if (/$ld_so_name/) {#if (/\Q$ld_so_name\E/) {#' \
		../scripts/test-installation.pl && \
	make && \
	make install # these take a while (~5 minutes on a i5 3.5GHz 32GB RAM WSL2 box)

USER $factorio_user
ENV FACTORIO_INIT_ALT_GLIBC=1
WORKDIR /opt/factorio-init

### and pre-install the game for glibc
FROM with-glibc-sidebyside AS with-pre-installed-game-glibc
ARG factorio_user
ARG factorio_group
ARG factorio_version

USER root
RUN tar -xvf /tmp/factorio_headless_x64_${factorio_version}.tar.xz -C /opt && \
	chown -R ${factorio_user}:${factorio_group} /opt/factorio
USER ${factorio_user}
ENV FACTORIO_INIT_WITH_PRE_INSTALLED_GAME=1
RUN /opt/glibc-2.18/lib/ld-2.18.so --library-path /opt/glibc-2.18/lib \
	/opt/factorio/bin/x64/factorio --create /opt/factorio/saves/server-save \
	--executable-path /opt/factorio/bin/x64/factorio && \
	cp /opt/factorio/data/server-settings.example.json /opt/factorio/data/server-settings.json

### and pre-install the game
FROM with-test-resources AS with-pre-installed-game
ARG factorio_user
ARG factorio_group
ARG factorio_version

USER root
RUN tar -xvf /tmp/factorio_headless_x64_${factorio_version}.tar.xz -C /opt && \
	chown -R ${factorio_user}:${factorio_group} /opt/factorio
USER ${factorio_user}
ENV FACTORIO_INIT_WITH_PRE_INSTALLED_GAME=1
RUN /opt/factorio/bin/x64/factorio --create /opt/factorio/saves/server-save && \
	cp /opt/factorio/data/server-settings.example.json /opt/factorio/data/server-settings.json
